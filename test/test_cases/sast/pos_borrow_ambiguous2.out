pipe test |> ['a, 'b] |> [x: &'a int, y: &'b int, z: &'a int] |> &'b int {
  if ((bool : (int : @(&'a int : x)) == (int : 2)))
  {
    |> (&'a int : x);
  }
  if ((bool : (int : @(&'b int : y)) == (int : 2)))
  {
    |> (&'b int : y);
  }
  |> (&'a int : z);
}

pipe main |> [] |> [] |> unit {
  int x <| (int : 4);
  while (bool : (int : x) < (int : 5))
  {
    if ((bool : (int : x) == (int : 2)))
    {
      int z <| (&'_ int : &(int : x));
      int y <| (int : 4);
      mut &'_ int w <| (&'_ int : &(int : y));
      loop (int : 0) -> (int : 5) as (xyz,(int : 1))      {
        w <| (&'_ int : test <| [(&'_ int : &(int : x)), (&'_ int : &(int : y)), (&'_ int : &(int : z))]);
      }
    }
  }
  |> (unit : ());
}
